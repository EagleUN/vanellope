swagger: '2.0'
info:
  version: 1.0.0
  title: Vanellope
  description: Microservice of sign up and log in deploy on Ruby on Rails + Postgres
  license:
    name: Software Architecture, 2019-I
host: 127.0.0.1:3001
basePath: /
tags:
- name: "signup"
  description: "Database management"
- name: "log"
  description: "Access to Eagle UN of a registered user"
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /signup/user/create:
    post:
      tags:
        - "signup"
      summary: Creates a new user
      operationId: createUser
      parameters:
        - name: user
          in: body
          required: true
          description: User Object with the correct parameters
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        '201':
          description: Created
        '406':
          description: Not Acceptable (Invalid Params)
        '500':
          description: Internal Server Error

  /signup/users:
    get:
      tags:
        - "signup"
      summary: Returns all Users
      operationId: allUsers
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/UsersList'
        '406':
          description: Not Acceptable (Invalid Params)
        '500':
          description: Internal Server Error

  /signup/user:
    get:
      tags:
        - "signup"
      summary: Returns a user with the given id
      operationId: userByEmail
      parameters:
        - name: email
          in: body
          description: The user with that email to be returned
          required: true
          schema:
            $ref: '#/definitions/GetUser'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/GetUser200'
        '406':
            description: Not Acceptable (Invalid Params)
        '500':
          description: Internal Server Error


    patch:
      tags:
        - "signup"
      summary: Updates a user with the given id
      operationId: updateUser
      parameters:
        - name: user
          in: body
          description: Updates user fields by getting the id
          required: true
          schema:
            $ref: '#/definitions/UpdateUser'
      responses:
        '202':
          description: Aceptable        
        '406':
            description: Not Acceptable (Invalid Params)
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error

    delete:
      tags:
        - "signup"
      summary: Deletes a user with the id
      operationId: deleteUser
      parameters:
        - name: id
          in: body
          description: Delete the user by obtaining the id
          required: true
          schema:
            $ref: '#/definitions/IdUser'
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  
  /log/user/in:
    post:
      tags:
        - "log"
      summary: Creates a new user session
      operationId: createNewUserSession
      parameters:
        - name: userSession
          in: body
          required: true
          description: Log in of the user with the correct parameters
          schema:
            $ref: '#/definitions/LogInUser'
      responses:
        '200':
          description: Ok
        '406':
          description: Not Acceptable (Invalid Params)
        '404':
          description: Not found
        '500':
          description: Internal Server Error

  /log/user:
    get:
      tags:
        - "log"
      summary: Returns of a token User
      operationId: tokenUser
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/TokenUser'
        '406':
          description: Not Acceptable (Invalid Params)
        '500':
          description: Internal Server Error

  /log/user/out:
    delete:
      tags:
        - "log"
      summary: Log out of a user session
      operationId: deleteUserSession
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

definitions:
  #NewUser
  NewUser:
    type: object
    properties:
      user:
        type: object
        properties:
          name:
            type: string
          last_name:
            type: string
          email:
            type: string
          password:
            type: string
          password_confirmation:
            type: string

  #GetUser
  GetUser:
    type: object
    properties:
      email:
        type: string


  #IdUser
  IdUser:
    type: object
    properties:
      id:
        type: string

  #UpdateUser
  UpdateUser:
    type: object
    properties:
      user:
        type: object
        properties:
          name:
            type: string
          last_name:
            type: string
          email:
            type: string
          password:
            type: string
          password_confirmation:
            type: string
          current_password:
            type: string

  # User
  User:
    type: object
    properties:
      name:
        type: string
      last_name:
        type: string
      email:
        type: string

  # GetUser200
  GetUser200:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      last_name:
        type: string
      email:
        type: string

  # TokenUser
  TokenUser:
    type: object
    properties:
      token:
        type: string

  #UsersList
  UsersList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/User'

  #LogInUser
  LogInUser:
    type: object
    properties:
      userSession:
        type: object
        properties:
          email:
            type: string
          password:
            type: string


# Errors
  ErrorModel:
    type: object
    properties:
      name:
        type: string
      last_name:
        type: string
      email:
        type: 'string'
      password:
        type: string
      password_confirmation:
        type: string